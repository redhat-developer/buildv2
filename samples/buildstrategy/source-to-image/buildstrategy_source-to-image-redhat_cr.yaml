---
apiVersion: shipwright.io/v1alpha1
kind: ClusterBuildStrategy
metadata:
  name: source-to-image-redhat
spec:
  buildSteps:
    - name: s2i-generate
      image: registry.redhat.io/ocp-tools-43-tech-preview/source-to-image-rhel8:latest
      workingDir: $(params.shp-source-root)
      args:
        - build
        - $(params.shp-source-context)
        - $(build.builder.image)
        - $(params.shp-output-image)
        - --as-dockerfile=/s2i/Dockerfile
      volumeMounts:
        - name: s2i
          mountPath: /s2i
    - name: buildah
      image: quay.io/containers/buildah:v1.23.1
      workingDir: /s2i
      securityContext:
        privileged: true
      command:
        - /bin/bash
      args:
        - -c
        - |
          set -euo pipefail

          echo "Creating registries config file..."

          format(){
              array=(`echo $1 | tr ',' ' '`)
              str=""
              for m in "${array[@]}"; do
                  str=$str"'${m}', "
              done

              echo ${str%??}
          }

          cat <<EOF >/tmp/registries.conf
          [registries.search]
          registries = [$(format "$(params.registry-search)")]

          [registries.insecure]
          registries = [$(format "$(params.registry-insecure)")]

          [registries.block]
          registries = [$(format "$(params.registry-block)")]

          EOF

          # Building the image
          echo '[INFO] Building image $(params.shp-output-image)'
          buildah bud \
            --registries-conf='/tmp/registries.conf' \
            --tag='$(params.shp-output-image)'

          # Push the image
          echo '[INFO] Pushing image $(params.shp-output-image)'
          buildah push \
            --tls-verify=false \
            'docker://$(params.shp-output-image)'
          
          # Store the digest result
          buildah images \
            --format='{{.Digest}}' \
            '$(params.shp-output-image)' | tr -d "\n" > '$(results.shp-image-digest.path)'
      volumeMounts:
        - name: s2i
          mountPath: /s2i
  parameters:
    - description: The registries for searching short name images such as `golang:latest`, separated by commas.
      name: registry-search
      default: docker.io,quay.io
    - description: The fully-qualified name of insecure registries. An insecure registry is one that does not have a valid SSL certificate or only does HTTP.
      name: registry-insecure
      default: ""
    - description: The registries that need to block pull access.
      name: registry-block
      default: ""
