# This Build Strategy will intentionally fail if the image has any
# critical CVEs. It will not be pushed into the destination registry
# if any critical vulnerabilities are found.
---
apiVersion: shipwright.io/v1alpha1
kind: ClusterBuildStrategy
metadata:
  name: kaniko-trivy
spec:
  volumes:
    - name: layout
      emptyDir: {}
    - name: tar
      emptyDir: {}
  buildSteps:
    - name: kaniko-build
      image: gcr.io/kaniko-project/executor:v1.9.1
      workingDir: $(params.shp-source-root)
      securityContext:
        runAsUser: 0
        capabilities:
          add:
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            - SETFCAP
            - KILL
      env:
        - name: HOME
          value: /tekton/home
        - name: AWS_ACCESS_KEY_ID
          value: NOT_SET
        - name: AWS_SECRET_KEY
          value: NOT_SET
      command:
        - /kaniko/executor
      args:
        - --skip-tls-verify=true
        - --dockerfile=$(build.dockerfile)
        - --context=$(params.shp-source-context)
        - --destination=$(params.shp-output-image)
        # https://github.com/GoogleContainerTools/kaniko/issues/2164
        - --ignore-path=/product_uuid
        - --oci-layout-path=/kaniko/oci-image-layout
        - --snapshotMode=redo
        - --no-push
        - --tarPath
        - /kaniko/tar-image/image.tar
      volumeMounts:
        - name: layout
          mountPath: /kaniko/oci-image-layout
        - name: tar
          mountPath: /kaniko/tar-image
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 65Mi
    - name: trivy-scan
      image: docker.io/aquasec/trivy:0.37.3
      volumeMounts:
      - mountPath: /image/
        name: tar
      command:
        - trivy
      args:
        - image
        - --exit-code=1
        - --severity=CRITICAL
        - --input
        - /image/image.tar
      env:
        - name: HOME
          value: /tekton/home
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 65Mi
    - name: crane-push
      image: gcr.io/go-containerregistry/crane:null
      securityContext:
        runAsUser: 0
      volumeMounts:
      - mountPath: /image/
        name: tar
      command:
        - crane
      args:
        - push
        - /image/image.tar
        - $(params.shp-output-image)
      env:
        - name: HOME
          value: /tekton/home
    - name: results
      image: registry.access.redhat.com/ubi9/ubi-minimal
      command:
        - /bin/bash
      args:
        - -c
        - |
          set -euo pipefail
          
          # Store the image digest
          grep digest /kaniko/oci-image-layout/index.json | sed -E 's/.*sha256([^"]*).*/sha256\1/' | tr -d '\n' > "$(results.shp-image-digest.path)"

          # Store the image size
          du -b -c /kaniko/oci-image-layout/blobs/sha256/* | tail -1 | sed 's/\s*total//' | tr -d '\n' > "$(results.shp-image-size.path)"
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      volumeMounts:
        - name: layout
          mountPath: /kaniko/oci-image-layout
